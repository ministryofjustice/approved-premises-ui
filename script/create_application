#!/bin/sh

# script/create_application: Create an application in the local dev database

cd "$(dirname "$0")/.." || exit

type="standard"

while [ "$1" != "" ];
do
   case $1 in
    --type)
        type=$2
        ;;
  esac
  shift 2
done

if [ "$type" = "standard" ]; then
  release_date=$(date -v +4m -I)

  additional_information=$(jq -c < "./script/data/additionalData.json")
  release_date_data=$(jq -n """
  {
    \"releaseDate-year\": \"$(date -v +4m "+%Y")\",
    \"releaseDate-month\": \"$(date -v +4m "+%m")\",
    \"releaseDate-day\": \"$(date -v +4m "+%d")\",
    \"releaseDate\": \"$release_date\",
    \"knowReleaseDate\": \"yes\"
  }
  """)

  application_data=$(jq -c < "./integration_tests/fixtures/applicationData.json" | \
    jq --arg additional_information "$additional_information" '."basic-information" += ($additional_information|fromjson)' |
    jq --arg release_date "$release_date_data" '."basic-information"."release-date" = ($release_date|fromjson)' \
  )
elif [ "$type" = "short_notice" ]; then
  release_date=$(date -v +8d -I)

  additional_information=$(jq -c < "./script/data/additionalData.json")
  additional_short_notice=$(jq -c < "./script/data/shortNoticeData.json")

  release_date_data=$(jq -n """
  {
    \"releaseDate-year\": \"$(date -v +8d "+%Y")\",
    \"releaseDate-month\": \"$(date -v +8d "+%m")\",
    \"releaseDate-day\": \"$(date -v +8d "+%d")\",
    \"releaseDate\": \"$release_date\",
    \"knowReleaseDate\": \"yes\"
  }
  """)

  application_data=$(jq -c < "./integration_tests/fixtures/applicationData.json" | \
    jq --arg additional_information "$additional_information" '."basic-information" += ($additional_information|fromjson)' |
    jq --arg additional_short_notice "$additional_short_notice" '."basic-information" += ($additional_short_notice|fromjson)' |
    jq --arg release_date "$release_date_data" '."basic-information"."release-date" = ($release_date|fromjson)' \
  )
else
  echo "Invalid type, must be either 'standard' or 'short_notice'"
  exit 1
fi



sql="""
DO \$$
DECLARE
   applicationData json := '$application_data';
   applicationId uuid := '$(uuidgen)';
   assessmentId uuid := '$(uuidgen)';
BEGIN
  insert into applications (
    \"id\",
    \"created_at\",
    \"created_by_user_id\",
    \"crn\",
    \"data\",
    \"service\",
    \"noms_number\"
  )
  values
    (
      applicationId,
      CURRENT_DATE + 7,
      ( SELECT id FROM users WHERE delius_username='JIMSNOWLDAP' ),
      'X320741',
      applicationData,
      (
        SELECT
          id
        FROM
          json_schemas
        WHERE
          type = 'APPROVED_PREMISES_APPLICATION'
        ORDER BY
          added_at DESC
        LIMIT 1
      ),
      'approved-premises',
      'A1234AI'
    );


  insert into approved_premises_applications (
      \"conviction_id\",
      \"event_number\",
      \"id\",
      \"is_pipe_application\",
      \"is_womens_application\",
      \"offence_id\",
      \"risk_ratings\",
      \"arrival_date\",
      \"is_withdrawn\"
    )
  values
    (
      '2500295345',
      '2',
      applicationId,
      false,
      false,
      'M2500295343',
      '{\"roshRisks\":{\"status\":\"Error\",\"value\":null},\"mappa\":{\"status\":\"Retrieved\",\"value\":{\"level\":\"CAT M2/LEVEL M2\",\"lastUpdated\":[2021,2,1]}},\"tier\":{\"status\":\"Retrieved\",\"value\":{\"level\":\"D2\",\"lastUpdated\":[2022,9,5]}},\"flags\":{\"status\":\"Retrieved\",\"value\":[\"Risk to Known Adult\"]}}',
      '$release_date',
      false
    );

END \$$;
"""

echo "==> Creating a $type application..."

echo "$sql" | psql -q postgresql://localdev:localdev_password@localhost:5431/approved_premises_localdev

echo "Done!"
